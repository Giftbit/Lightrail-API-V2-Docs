idPurpose: "This ID is a value you choose to represent the resource.  Two resources can't have the same ID, guaranteeing repeated calls won't create extra resources."
tags: "Segmentation tags."
contact:
  createdDate: "Date when the Contact was created."
  id: "ID for the Contact."
  email: "The Contact's email."
  firstName: "The Contact's first name."
  lastName: "The Contact's last name."
  metadata: "Arbitrary data associated with the Contact."
  updatedDate: "Date when the Contact was last updated."
currency:
  code: "Short code for a currency, eg: `USD`, `FUNBUX`."
  decimalPlaces: "The number of decimal places used in formatting, eg: US Dollars are stored in cents so `decimalPlaces` is `2`."
  name: "Long name for the currency, eg: `Dollars`."
  symbol: "Currency symbol used for formatting, eg: `$`."
filter:
  active: "Filter active/inactive."
  balance: "Filter by balance."
  canceled: "Filter canceled."
  contactId: "Filter by Values attached to the given Contact ID."
  createdDate: "Filter by createdDate."
  currency: "Filter by currency."
  discount: "Filter by discount."
  endDate: "Filter by endDate."
  firstName: "Filter by the firstName."
  frozen: "Filter frozen/unfrozen."
  email: "Filter by email."
  id: "Filter by ID."
  lastName: "Filter by the lastName."
  list: "Multiple values can be sent as a comma separated list in which case only one value must match."
  pretax: "Filter by whether or not the Value is applied preTax."
  programId: "Filter by Program ID."
  startDate: "Filter by startDate."
  tags: "Filter by tag."
  transactionType: "Filter by the transactionType."
  updatedDate: "Filter by updatedDate."
  uses: "Filter by number of uses remaining."
  ops:
    date: "This filter supports operators: `lt`, `lte`, `gt`, `gte`, `eq`, `ne`.  See [filtering](#introduction/filtering) for more information."
    in: "This filter supports the operator `in`.  See [filtering](#introduction/filtering) for more information."
    number: "This filter supports operators: `lt`, `lte`, `gt`, `gte`, `eq`, `ne`.  See [filtering](#introduction/filtering) for more information."
    string: "This filter supports operators: `lt`, `lte`, `gt`, `gte`, `eq`, `ne`, `like`.  See [filtering](#introduction/filtering) for more information."
header:
  authorization: "Authorization: Bearer <API_KEY>"
issuance:
  createdDate: "Date when the Value was issued."
  id: "ID for the Issuance."
pagination:
  limit: "The max number of items to get."
  maxLimit: "The `limit` available`."
patch:
  merge: "Applies a JSON merge.  Only members that are present are changed and all others are left untouched."
  alsoChangeValues: "If updating this member, you likely also want to update any existing Values already created through this Program."
program:
  id: "ID for the Program."
  name: "A human-readable name for the Program."
  type: "Must be either `promotion`, `giftCard`, or `account`."
  maxInitialBalance: "The maximum balance the Value can be created with."
  minInitialBalance: "The minimum balance the Value can be created with."
  fixedInitialBalances: "A list of exact balances the Value can be created with."
  fixedInitialUses: "A list of exact uses the Value can be created with."
  uses: "If set the number of uses the Value will be created with.  Set `null` or omit for infinite uses."
  startDate: "Earliest date that Values belonging to this Program can be active."
  endDate: "Latest date that Values belonging to this Program can be active."
  createdDate: "Date when the Program was created."
  updatedDate: "Date when the Program was last updated."
  metadata: "Arbitrary data associated with the Program."
  issuance:
    codeGeneration: "Settings for randomly generated codes."
    lengthMatchCount: "The length of the list must match `count`."
    oneOfAccess: "One of `contacts`, `codes`, or `codeGeneration` must be specified."
    secureCodes: "Codes are stored securely.  They will only be visible in the CSV file."
    startDate: "Override the Program's configured startDate."
    endDate: "Override the Program's configured endDate."
transaction:
  allowRemainder: "If true the transaction will go through without all balance being debited, and the remainder indicated."
  createdDate: "Date when the Transaction was created."
  id: "ID for the Transaction."
  idPurpose: "Two Transactions can't have the same ID, guaranteeing the Transaction can't happen twice."
  metadata: "Arbitrary data associated with the Transaction."
  pending: "If true the transaction is created as pending and does not complete until captured.  The transaction will be automatically voided if not captured."
  remainder: "The remainder of balance that could not be debited."
  simulate: "If true the transaction is simulated and no changes take place.  If the transaction is repeated with simulate=false it is not guaranteed to behave the same way as the underlying Values can change."
  simulated: "True if the transaction was simulated."
  steps: "An array of transaction steps."
  transactionType: "The type of the transaction, eg: `debit`, `credit`, `checkout`..."
  lineItem:
    type: "Must be either `product`, `shipping` or `fee`."
    productId: "The ID of the product."
    variantId: "The variant ID of a product. (Can be used to store SKU.)"
    unitPrice: "The unit price of the item."
    quantity: "The number of items. Defaults to 1 if not provided."
    taxRate: "Tax rate for the item. This is needed when a transaction contains items that have different tax rates."
    tags: "A list of tags associated with the item. For example, 'seasonal' or 'clothing'."
    metadata: "Any additional data you want to store for the item."
    lineTotal:
      price: "The total cost of the items. ie `unitPrice * quantity`."
      taxable: "The taxable amount. ie `price - preTaxDiscount`."
      tax: "The taxable amount multiplied by the taxRate for the item. Uses 'bankers rounding'."
      discount: "The discount"
      payable: "The cost of the line item after tax and discounts have been applied."
value:
  active: "Whether the Value is active and can be used upon creation."
  balance: "The amount of money available in a Value.  This is always an integer greater than or equal to 0 representing the smallest units of the currency. For example, $25 USD = 2500."
  canceled: "If true the Value is canceled.  Once canceled the Value can never be uncanceled."
  code: "The code.  If the code is secure only the last four digits are displayed with an ellipsis, eg: `â€¦ABCD`."
  contact: "The ID of the Contact that has claimed this Value."
  endDate: "Date when the Value expires."
  frozen: "If true the Value is frozen and cannot be transacted with."
  discount: "If true the Value will be noted as a discount for the Contact on checkout."
  id: "ID of the Value."
  metadata: "Arbitrary data associated with the Value."
  preTax: "If true the Value's balance is applied on checkout before tax is calculated."
  programId: "The ID of the Program this Value is in."
  redemptionRule: "A Redemption Rule controlling when the Value can be used in checkout.  The syntax is defined in a [separate document](https://github.com/Giftbit/Lightrail-API-Docs/blob/master/feature-deep-dive/redemption-rules.md)."
  ruleExplanation: "An explanation for the `redemptionRule` does that can be used to display to the contact."
  startDate: "Date when the Value becomes available."
  uses: "The number of times the Value can be used.  When this number reaches 0 the Value is expired."
  valueRule: "A Value Rule controlling the effective balance of the Value in a Checkout.  To use this `balance` must be set to `null`.  The syntax will be defined in a separate document."
  create:
    code: "Assign a code.  Cannot be set with `contact`."
    contact: "Directly apply to a Contact.  Cannot be set with `code`."
    programId: "Create as part of a Program and copy default properties from it."
  access:
    description: "How the values can be accessed"
    types:
      contact: "must be associated with a Contact by ID."
      secureCode: "a code is generated or supplied and is stored securely."
      publicCode: "a code is generated or supplied and can be displayed."
